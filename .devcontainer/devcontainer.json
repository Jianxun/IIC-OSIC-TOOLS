{
	"name": "IIC OSIC Tools (VNC Enabled)",
	"image": "hpretl/iic-osic-tools:latest",

	// Forward ports: container 80 (web/noVNC) to host 8080, container 5901 (VNC) to host 5901
	"forwardPorts": [
		"8080:80",
		"5901:5901"
	],

	// Set environment variables inside the container
	"containerEnv": {
		"VNC_PW": "abc123" // Default VNC password, change if needed
		// "IIC_OSIC_TOOLS_QUIET": "1" // Uncomment to enable quiet mode
	},

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python"
				// Add other extensions like linters, debuggers, etc.
			],
			"settings": {
				"terminal.integrated.cwd": "/foss/designs"
			}
		}
	},

	// Mount your workspace-local designs directory into the container
	"mounts": [
		"source=${localWorkspaceFolder}/designs,target=/foss/designs,type=bind,consistency=cached"
	],

	// Optional: If you want to use the same Docker run arguments as the scripts
	// You might need to adjust these based on your OS and needs
	"runArgs": [
		"--rm", // Remove the container when VS Code closes it
		// Set user for the container. For macOS, start_vnc.sh defaults to 1000:1000.
		// For Linux, you might want to dynamically set this to your current UID/GID
		// e.g., by resolving them and placing them here or using a wrapper script.
		"--user", "1000:1000"
		// Example for X11 forwarding (Linux-specific, adapt as needed if also using X11 apps)
		// "-e", "DISPLAY=${env:DISPLAY}",
		// "-v", "/tmp/.X11-unix:/tmp/.X11-unix:rw",
	]
	// "remoteUser": "1000" // You can also set the remote user VS Code server runs as.
                         // If the user 1000 exists in the container, otherwise it might default to root or vscode.
} 